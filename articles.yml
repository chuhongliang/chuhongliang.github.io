
- id: nodejs
  title: Node.js 简介
  postedOn: !!str 2020-01-26
  author: chuhongliang
  tags:
    - Node
  abstract: Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。 Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型。Node 是一个让 JavaScript 运行在服务端的开发平台，它让 JavaScript 成为与PHP、Python、Perl、Ruby 等服务端语言平起平坐的脚本语言。 [2]  发布于2009年5月，由Ryan Dahl开发，实质是对Chrome V8引擎进行了封装。

- id: node-module
  title: Node.js 模块
  postedOn: !!str 2020-01-27
  author: chuhongliang
  tags:
    - Node
  abstract: 在 Node.js 模块系统中，每个文件都被视为一个独立的模块.Node.js 模块机制采用了 Commonjs 规范，弥补了当前 JavaScript 开发大型应用没有标准的缺陷，类似于 Java 中的类文件，Python 中的 import 机制，Node.js 中可以通过 module.exports、require 来导出和引入一个模块.在模块加载机制中，Node.js 采用了延迟加载的策略，只有在用到的情况下，系统模块才会被加载，加载完成后会放到 binding_cache 中。

- id: javascript
  title: JavaScript 简介
  postedOn: !!str 2020-01-27
  author: chuhongliang
  tags:
    - JavaScript
  abstract: JavaScript（简称“JS”） 是一种具有函数优先的轻量级，解释型或即时编译型的编程语言。虽然它是作为开发Web页面的脚本语言而出名的，但是它也被用到了很多非浏览器环境中，JavaScript 基于原型编程、多范式的动态脚本语言，并且支持面向对象、命令式和声明式（如函数式编程）风格。

- id: javascript-type
  title: JavaScript 类型
  postedOn: !!str 2020-01-28
  author: chuhongliang
  tags:
    - JavaScript
  abstract: 原始类型又被称为基本类型，原始类型保存的变量和值直接保存在栈内存(Stack)中,且空间相互独立,通过值来访问.引用类型,即Object 类型,再往下细分，还可以分为：Object 类型、Array 类型、Date 类型、Function 类型 等。

- id: javascript-string
  title: JavaScript 字符串常用方法
  postedOn: !!str 2020-01-28
  author: chuhongliang
  tags:
    - JavaScript
  abstract: String 全局对象是一个用于字符串或一个字符序列的构造函数。并提供了相关静态方法用于处理字符串。

- id: javascript-object
  title: JavaScript Object常用方法
  postedOn: !!str 2020-01-29
  author: chuhongliang
  tags:
    - JavaScript
  abstract: Object类是所有JavaScript类的基类(父类)，并提供了一种创建自定义对象的简单方式，Object本身是一个函数，可以当作工具方法使用，将任意值转为对象。这个方法常用于保证某个值一定是对象。如果参数为空（或者为undefined和null），Object()返回一个空对象。

- id: javascript-array
  title: JavaScript 数组常用方法
  postedOn: !!str 2020-01-29
  author: chuhongliang
  tags:
    - JavaScript
  abstract: JavaScript的数组是无类型的，数组元素可以是任意类型，同一个数组中的不同元素可能是对象或数组。数组元素的索引不一定要连续，元素之间可以有空隙，叫做稀疏数组 。每个数组都具有一个lengrh属性。针对非稀疏数组，length属性就是数组元素的个数，针对稀疏数组，元素的length属性比所有元素的索引要大。非稀疏是我们学习掌握的主要知识点。

- id: javascript-math
  title: JavaScript Math常用方法
  postedOn: !!str 2020-01-30
  author: chuhongliang
  tags:
    - JavaScript
  abstract: Math 是一个内置对象， 它具有数学常数和函数的属性和方法。不是一个函数对象。与其他全局对象不同的是，Math 不是一个构造器。 Math 的所有属性与方法都是静态的。

- id: javascript-prototype
  title: JavaScript 原型
  postedOn: !!str 2020-01-30
  author: chuhongliang
  tags:
    - JavaScript
  abstract: 我们所创建的每一个函数，解析器都会向函数中添加一个属性prototype，这个属性对应着一个对象，这个对象就是我们所谓的原型对象. 如果函数作为普通函数调用prototype没有任何作用, 当函数以构造函数的形式调用时，它所创建的对象中都会有一个隐含的属性，指向该构造函数的原型对象，我们可以通过__proto__来访问该属性.

- id: javascript-function
  title: JavaScript 匿名函数与闭包
  postedOn: !!str 2020-02-01
  author: chuhongliang
  tags:
    - JavaScript
  abstract: 闭包是可访问一个函数作用域里变量的函数，由于闭包作用域返回的局部变量资源不会被立刻销毁回收，所以可能会占用更多的内存。过度使用闭包会导致性能下降，建议在非常有必要的时候才使用闭包。

- id: javascript-eventloop
  title: 浏览器中的 Event Loop
  postedOn: !!str 2020-02-02
  author: chuhongliang
  tags:
    - JavaScript
  abstract: 事件循环中的异步队列有两种：macro（宏任务）队列和 micro（微任务）队列。宏任务队列可以有多个，微任务队列只有一个

- id: node-eventloop
  title: Node 中的 Event Loop
  postedOn: !!str 2020-02-03
  author: chuhongliang
  tags:
    - Node
  abstract: Node.js采用V8作为js的解析引擎，而I/O处理方面使用了自己设计的libuv，libuv是一个基于事件驱动的跨平台抽象层，封装了不同操作系统一些底层特性，对外提供统一的API，事件循环机制也是它里面的实现。